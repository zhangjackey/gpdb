-- TODO: inherit tables
-- TODO: partition tables
-- TODO: ao tables
-- TODO: tables and temp tables
\set explain 'explain analyze'
set allow_system_table_mods to true;
--
-- prepare kinds of tables
--
create temp table t1 (c1 int, c2 int, c3 int, c4 int) distributed by (c1, c2);
create temp table d1 (c1 int, c2 int, c3 int, c4 int) distributed replicated;
create temp table r1 (c1 int, c2 int, c3 int, c4 int) distributed randomly;
create temp table t2 (c1 int, c2 int, c3 int, c4 int) distributed by (c1, c2);
create temp table d2 (c1 int, c2 int, c3 int, c4 int) distributed replicated;
create temp table r2 (c1 int, c2 int, c3 int, c4 int) distributed randomly;
update gp_distribution_policy set numsegments=1
	where localoid in ('t1'::regclass, 'd1'::regclass, 'r1'::regclass);
update gp_distribution_policy set numsegments=2
	where localoid in ('t2'::regclass, 'd2'::regclass, 'r2'::regclass);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in (
		't1'::regclass, 'd1'::regclass, 'r1'::regclass,
		't2'::regclass, 'd2'::regclass, 'r2'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t1       | {1,2}    | p          |           1
 d1       |          | r          |           1
 r1       |          | p          |           1
 t2       | {1,2}    | p          |           2
 d2       |          | r          |           2
 r2       |          | p          |           2
(6 rows)

--
-- create table
--
create temp table t (like t1);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

drop table t;
create temp table t as table t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed by (c1, c2);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed replicated;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | r          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed randomly;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | p          |           3
(1 row)

drop table t;
select * into temp table t from t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
--
-- alter table
--
create table t (like t1);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t set distributed replicated;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | r          |           1
(1 row)

alter table t set distributed randomly;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | p          |           1
(1 row)

alter table t set distributed by (c1, c2);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t add column c10 int;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t alter column c10 type text;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

drop table t;
-- below join cases cover all the combinations of
--
--     select * from {t,d,r}{1,2} a
--      {left,} join {t,d,r}{1,2} b
--      using (c1{',c2',});
--
-- there might be some duplicated ones, like 't1 join d1' and 'd1 join t1',
-- or 'd1 join r1 using (c1)' and 'd1 join r1 using (c1, c2)', this is because
-- we generate them via scripts and do not clean them up manually.
--
-- please do not remove the duplicated ones as we care about the motion
-- direction of different join orders, e.g. 't2 join t1' and 't1 join t2'
-- should both distribute t2 to t1.
--
-- x1 join y1
--
:explain select * from t1 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=253.781..253.781 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..7.029 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.066 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.013 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 508.665 ms
(13 rows)

:explain select * from t1 a join t1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.055..251.055 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.106 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.104 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.056 ms
(11 rows)

:explain select * from t1 a join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.037..251.037 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.104 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.102 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.395 ms
(11 rows)

:explain select * from t1 a join d1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.716..250.716 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.103 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.102 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.692 ms
(11 rows)

:explain select * from t1 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.067..252.067 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..2.971 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.549 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.546 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.080 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.143 ms
(13 rows)

:explain select * from t1 a join r1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=251.628..251.628 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.496 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.045 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.083 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.080 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.264 ms
(14 rows)

:explain select * from d1 a join t1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.586..250.586 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.058 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.057 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.105 ms
(11 rows)

:explain select * from d1 a join t1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.024..251.024 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.100 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.098 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.322 ms
(11 rows)

:explain select * from d1 a join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.086..251.086 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.104 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.103 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.380 ms
(11 rows)

:explain select * from d1 a join d1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.462..250.462 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.083 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.082 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.913 ms
(11 rows)

:explain select * from d1 a join r1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.173..251.173 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.115 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.114 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.398 ms
(11 rows)

:explain select * from d1 a join r1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.939..250.939 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.215 ms
(11 rows)

:explain select * from r1 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.202..252.202 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.280 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.372 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.369 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.070 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.520 ms
(13 rows)

:explain select * from r1 a join t1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.290..252.290 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.255 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.064 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.140 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.138 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.952 ms
(14 rows)

:explain select * from r1 a join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.128..251.128 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.102 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.100 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.346 ms
(11 rows)

:explain select * from r1 a join d1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.139..251.139 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.170 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.128 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.583 ms
(11 rows)

:explain select * from r1 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.223..252.223 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.426 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.102 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.100 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.413 ms
(13 rows)

:explain select * from r1 a join r1 b using (c1, c2);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6854.50..3799479.05 rows=5056 width=24) (actual time=252.010..252.010 rows=0 loops=2)
   ->  Hash Join  (cost=6854.50..3799479.05 rows=1686 width=24) (actual time=0.000..2.862 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.875 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.873 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.052 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.952 ms
(13 rows)

--
-- x1 join y2
--
:explain select * from t1 a join t2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=251.810..251.810 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.085 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.951 rows=0 loops=1)
               ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.948 rows=0 loops=1)
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.041 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.547 ms
(13 rows)

:explain select * from t1 a join t2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=3299.50..1268319.05 rows=5056 width=24) (actual time=252.126..252.126 rows=0 loops=2)
   ->  Hash Join  (cost=3299.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.071 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.060 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.056 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.202 ms
(14 rows)

:explain select * from t1 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.088..251.088 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.081 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.080 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.129 ms
(11 rows)

:explain select * from t1 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.142..251.142 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.119 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.117 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.398 ms
(11 rows)

:explain select * from t1 a join r2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.156..252.156 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.203 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.025 rows=0 loops=1)
               ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.023 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.296 ms
(13 rows)

:explain select * from t1 a join r2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.711..252.711 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.287 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.066 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.090 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.087 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.328 ms
(14 rows)

:explain select * from d1 a join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=2.606..2.606 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.088 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.007..0.007 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.005..0.005 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.040 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.994 ms
(16 rows)

:explain select * from d1 a join t2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.216..252.216 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.707 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.105 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.140 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.137 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.902 ms
(14 rows)

:explain select * from d1 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.656..250.656 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.106 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.104 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.303 ms
(11 rows)

:explain select * from d1 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.162..251.162 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.118 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.116 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.584 ms
(11 rows)

:explain select * from d1 a join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.554..1.554 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.117 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.273..0.273 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.271..0.271 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.045 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.344 ms
(16 rows)

:explain select * from d1 a join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.888..1.888 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.945..0.945 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.944..0.944 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.050 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.876 ms
(16 rows)

:explain select * from r1 a join t2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=251.645..251.645 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..2.175 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.251 rows=0 loops=1)
               ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.248 rows=0 loops=1)
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.064 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.347 ms
(13 rows)

:explain select * from r1 a join t2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.603..252.603 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.282 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.048 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.169 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.167 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.220 ms
(14 rows)

:explain select * from r1 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.937..250.937 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.132 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.130 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.006 ms
(11 rows)

:explain select * from r1 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.559..250.559 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.072 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.071 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.244 ms
(11 rows)

:explain select * from r1 a join r2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.327..252.327 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.838 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.488 rows=0 loops=1)
               ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.486 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.069 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.673 ms
(13 rows)

:explain select * from r1 a join r2 b using (c1, c2);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6854.50..3799479.05 rows=5056 width=24) (actual time=252.068..252.068 rows=0 loops=2)
   ->  Hash Join  (cost=6854.50..3799479.05 rows=1686 width=24) (actual time=0.000..3.089 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.249 rows=0 loops=1)
               ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.246 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.069 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.003 ms
(13 rows)

--
-- x2 join y1
--
:explain select * from t2 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.193..252.193 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.411 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.395 rows=0 loops=1)
               ->  Broadcast Motion 1:2  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.392 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.450 ms
(13 rows)

:explain select * from t2 a join t1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=3299.50..1268319.05 rows=5056 width=24) (actual time=252.338..252.338 rows=0 loops=2)
   ->  Hash Join  (cost=3299.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.219 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.483 rows=0 loops=1)
               ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.481 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.040 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.548 ms
(14 rows)

:explain select * from t2 a join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.138..1.138 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.104 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.259..0.259 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.258..0.258 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.280 ms
(16 rows)

:explain select * from t2 a join d1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=251.956..251.956 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.031 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.060 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.099 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.096 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.199 ms
(14 rows)

:explain select * from t2 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=251.833..251.833 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.407 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.753 rows=0 loops=1)
               ->  Broadcast Motion 1:2  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.750 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.049 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.540 ms
(13 rows)

:explain select * from t2 a join r1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.279..252.279 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.525 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.162 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.159 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.467 ms
(14 rows)

:explain select * from d2 a join t1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.177..251.177 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.154 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.142 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.363 ms
(11 rows)

:explain select * from d2 a join t1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.005..251.005 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.110 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.160 ms
(11 rows)

:explain select * from d2 a join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.984..250.984 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.123 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.121 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.003 ms
(11 rows)

:explain select * from d2 a join d1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.034..251.034 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.103 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.101 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.185 ms
(11 rows)

:explain select * from d2 a join r1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.793..250.793 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.108 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.107 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.693 ms
(11 rows)

:explain select * from d2 a join r1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.134..251.134 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.386 ms
(11 rows)

:explain select * from r2 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.462..252.462 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.355 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.145 rows=0 loops=1)
               ->  Broadcast Motion 1:2  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.143 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.056 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.860 ms
(13 rows)

:explain select * from r2 a join t1 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.557..252.557 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..3.097 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.075 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.170 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.166 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.097 ms
(14 rows)

:explain select * from r2 a join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.232..1.232 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.115 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.316..0.316 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.316..0.316 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.035 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.005 ms
(16 rows)

:explain select * from r2 a join d1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.879..1.879 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.078 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.810..0.810 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.809..0.809 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.035 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.466 ms
(16 rows)

:explain select * from r2 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.094..252.094 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.172 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.951 rows=0 loops=1)
               ->  Broadcast Motion 1:2  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.947 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.054 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.418 ms
(13 rows)

:explain select * from r2 a join r1 b using (c1, c2);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6854.50..3799479.05 rows=5056 width=24) (actual time=252.301..252.301 rows=0 loops=2)
   ->  Hash Join  (cost=6854.50..3799479.05 rows=1686 width=24) (actual time=0.000..3.418 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.447 rows=0 loops=1)
               ->  Broadcast Motion 1:2  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.444 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.060 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.779 ms
(13 rows)

--
-- x2 join y2
--
:explain select * from t2 a join t2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.385..252.385 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..2.597 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.366 rows=0 loops=1)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.364 rows=0 loops=1)
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.038 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.617 ms
(13 rows)

:explain select * from t2 a join t2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.661..250.661 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.090 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.088 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.257 ms
(11 rows)

:explain select * from t2 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.109..251.109 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.120 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.118 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.301 ms
(11 rows)

:explain select * from t2 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.646..250.646 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.108 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.106 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.564 ms
(11 rows)

:explain select * from t2 a join r2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.014..252.014 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.646 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.297 rows=0 loops=1)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.295 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.035 ms
(13 rows)

:explain select * from t2 a join r2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=251.858..251.858 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.709 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.069 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.095 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.092 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.906 ms
(14 rows)

:explain select * from d2 a join t2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.960..250.960 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.093 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.092 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.125 ms
(11 rows)

:explain select * from d2 a join t2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.884..250.884 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.107 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.105 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.812 ms
(11 rows)

:explain select * from d2 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.528..250.528 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.078 ms
(11 rows)

:explain select * from d2 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.004..251.004 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.074 ms
(11 rows)

:explain select * from d2 a join r2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.568..250.568 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.126 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.125 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.168 ms
(11 rows)

:explain select * from d2 a join r2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=250.588..250.588 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.082 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.080 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.595 ms
(11 rows)

:explain select * from r2 a join t2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.093..252.093 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..4.654 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.992 rows=0 loops=1)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.990 rows=0 loops=1)
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.058 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.792 ms
(13 rows)

:explain select * from r2 a join t2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=252.381..252.381 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.530 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.093 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.089 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.802 ms
(14 rows)

:explain select * from r2 a join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.690..250.690 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.108 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.106 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.636 ms
(11 rows)

:explain select * from r2 a join d2 b using (c1, c2);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=251.094..251.094 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.285 ms
(11 rows)

:explain select * from r2 a join r2 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=252.289..252.289 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.396 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.320 rows=0 loops=1)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.317 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.044 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.510 ms
(13 rows)

:explain select * from r2 a join r2 b using (c1, c2);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=6854.50..3799479.05 rows=5056 width=24) (actual time=252.001..252.001 rows=0 loops=2)
   ->  Hash Join  (cost=6854.50..3799479.05 rows=1686 width=24) (actual time=0.000..3.006 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.432 rows=0 loops=1)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.428 rows=0 loops=1)
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.065 ms
(13 rows)

--
-- x1 left join y1
--
:explain select * from t1 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.627..252.627 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.849 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.006 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.057 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.792 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.789 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.048 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 519.179 ms
(17 rows)

:explain select * from t1 a left join t1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.804..250.804 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.113 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.111 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.708 ms
(11 rows)

:explain select * from t1 a left join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.654..250.654 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.113 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.111 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.482 ms
(11 rows)

:explain select * from t1 a left join d1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.910..250.910 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.111 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.058 ms
(11 rows)

:explain select * from t1 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.255..252.255 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.595 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.100 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.116 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.052 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.050 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.116 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.486 ms
(17 rows)

:explain select * from t1 a left join r1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=252.169..252.169 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.611 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.091 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.099 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.097 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.382 ms
(14 rows)

:explain select * from d1 a left join t1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.548..1.548 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.111 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.365..0.365 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.365..0.365 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.313 ms
(16 rows)

:explain select * from d1 a left join t1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=2.146..2.146 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.063 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.959..0.959 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.959..0.959 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.043 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.480 ms
(16 rows)

:explain select * from d1 a left join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.920..250.920 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.100 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.099 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.717 ms
(11 rows)

:explain select * from d1 a left join d1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=251.082..251.082 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.133 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.131 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.258 ms
(11 rows)

:explain select * from d1 a left join r1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.717..1.717 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.076 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.804..0.804 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.803..0.803 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.420 ms
(16 rows)

:explain select * from d1 a left join r1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.192..1.192 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.075 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.273..0.273 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.273..0.273 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.982 ms
(16 rows)

:explain select * from r1 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.401..252.401 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.123 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.093 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.749 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.746 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.058 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.896 ms
(17 rows)

:explain select * from r1 a left join t1 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=252.009..252.009 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.541 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.286 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.127 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.124 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.949 ms
(14 rows)

:explain select * from r1 a left join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.995..250.995 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.078 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.076 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.044 ms
(11 rows)

:explain select * from r1 a left join d1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.975..250.975 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.107 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.106 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.958 ms
(11 rows)

:explain select * from r1 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.413..252.413 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.960 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.007 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.067 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.758 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.756 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.104 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.734 ms
(17 rows)

:explain select * from r1 a left join r1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=251.553..251.553 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..3.212 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.005 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.052 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.938 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.935 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.052 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.318 ms
(17 rows)

--
-- x1 left join y2
--
:explain select * from t1 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.809..251.809 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.091 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.006 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.048 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.098 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.096 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.065 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.573 ms
(17 rows)

:explain select * from t1 a left join t2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=3299.50..1268979.50 rows=71100 width=24) (actual time=252.039..252.039 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1268979.50 rows=23700 width=24) (actual time=0.000..3.281 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.099 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.238 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.236 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.042 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.059 ms
(14 rows)

:explain select * from t1 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.109..251.109 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.112 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.259 ms
(11 rows)

:explain select * from t1 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=251.118..251.118 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.108 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.106 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.319 ms
(11 rows)

:explain select * from t1 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.624..252.624 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.307 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.243 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.070 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.698 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.696 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.113 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.371 ms
(17 rows)

:explain select * from t1 a left join r2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=252.345..252.345 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.708 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.119 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.074 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.070 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.855 ms
(14 rows)

:explain select * from d1 a left join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.161..1.161 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.114 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.275..0.275 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.275..0.275 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.020 ms
(16 rows)

:explain select * from d1 a left join t2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.355..1.355 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.107 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.262..0.262 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.262..0.262 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.375 ms
(16 rows)

:explain select * from d1 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.585..250.585 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.075 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.075 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.243 ms
(11 rows)

:explain select * from d1 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=251.042..251.042 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.110 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.108 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.115 ms
(11 rows)

:explain select * from d1 a left join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=2.198..2.198 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.109 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.935..0.935 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.934..0.934 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.043 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.375 ms
(16 rows)

:explain select * from d1 a left join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.331..1.331 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.079 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.359..0.359 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.358..0.358 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.036 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.306 ms
(16 rows)

:explain select * from r1 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.599..252.599 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.370 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.058 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.683 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.680 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.067 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.251 ms
(17 rows)

:explain select * from r1 a left join t2 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.673..251.673 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..3.391 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.054 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.067 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.064 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.062 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.342 ms
(14 rows)

:explain select * from r1 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=251.109..251.109 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.112 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.348 ms
(11 rows)

:explain select * from r1 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=251.030..251.030 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.115 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.112 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.398 ms
(11 rows)

:explain select * from r1 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.322..252.322 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.386 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.404 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.702 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.699 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.052 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.618 ms
(17 rows)

:explain select * from r1 a left join r2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=252.682..252.682 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..3.446 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.006 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.040 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.021 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.017 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.059 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 506.475 ms
(17 rows)

--
-- x2 left join y1
--
:explain select * from t2 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=252.213..252.213 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.995 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.363 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.590 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.587 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.079 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.369 ms
(17 rows)

:explain select * from t2 a left join t1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=3299.50..1268979.50 rows=71100 width=24) (actual time=252.332..252.332 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1268979.50 rows=23700 width=24) (actual time=0.000..3.231 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.108 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.501 rows=0 loops=1)
               ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.495 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.061 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.581 ms
(14 rows)

:explain select * from t2 a left join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=251.853..251.853 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=250.374..250.374 rows=0 loops=2)
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.110 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.254..0.254 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.254..0.254 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.036 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.353 ms
(16 rows)

:explain select * from t2 a left join d1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=252.032..252.032 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.653 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.085 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.082 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.072 ms
(14 rows)

:explain select * from t2 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.991..251.991 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.287 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.006 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.086 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.926 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.924 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.042 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 505.052 ms
(17 rows)

:explain select * from t2 a left join r1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.638..251.638 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.426 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.048 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.082 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.080 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.259 ms
(14 rows)

:explain select * from d2 a left join t1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.613..1.613 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.350..0.350 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.349..0.349 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.044 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.454 ms
(16 rows)

:explain select * from d2 a left join t1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.620..1.620 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.054 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.764..0.764 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.763..0.763 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.581 ms
(16 rows)

:explain select * from d2 a left join d1 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.377..250.377 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.047 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.464 ms
(11 rows)

:explain select * from d2 a left join d1 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.819..250.819 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.053 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.347 ms
(11 rows)

:explain select * from d2 a left join r1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.140..1.140 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.244..0.244 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.244..0.244 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.028 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.475 ms
(16 rows)

:explain select * from d2 a left join r1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=0.942..0.942 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.044 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.243..0.243 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.241..0.241 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.405 ms
(16 rows)

:explain select * from r2 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.310..251.310 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.148 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.004 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.086 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.527 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.511 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.346 ms
(17 rows)

:explain select * from r2 a left join t1 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.760..251.760 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.824 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.202 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.060 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.082 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.061 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.295 ms
(14 rows)

:explain select * from r2 a left join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=251.157..251.157 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=249.631..249.631 rows=0 loops=2)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.060 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.809..0.809 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.808..0.808 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.038 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.856 ms
(16 rows)

:explain select * from r2 a left join d1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.528..251.528 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=250.413..250.413 rows=0 loops=2)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.236..0.236 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.235..0.235 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.523 ms
(16 rows)

:explain select * from r2 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.719..251.719 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.533 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.023 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.044 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.634 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.633 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.385 ms
(17 rows)

:explain select * from r2 a left join r1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=251.691..251.691 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..3.306 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.396 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.609 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.607 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.118 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.305 ms
(17 rows)

--
-- x2 left join y2
--
:explain select * from t2 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.582..251.582 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.678 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.004 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.725 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.722 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.064 ms
(17 rows)

:explain select * from t2 a left join t2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.835..250.835 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.057 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.057 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.465 ms
(11 rows)

:explain select * from t2 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.829..250.829 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.058 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.056 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.439 ms
(11 rows)

:explain select * from t2 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.809..250.809 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.046 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.045 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.350 ms
(11 rows)

:explain select * from t2 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.414..251.414 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.159 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.004 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.036 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.591 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.589 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.037 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.642 ms
(17 rows)

:explain select * from t2 a left join r2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.532..251.532 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..1.840 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.068 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.126 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.121 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.867 ms
(14 rows)

:explain select * from d2 a left join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=0.968..0.968 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.117 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.221..0.221 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.220..0.220 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.553 ms
(16 rows)

:explain select * from d2 a left join t2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.562..1.562 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.772..0.772 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.771..0.771 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.424 ms
(16 rows)

:explain select * from d2 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.438..250.438 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.051 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.050 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 501.593 ms
(11 rows)

:explain select * from d2 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.798..250.798 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.047 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.047 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.227 ms
(11 rows)

:explain select * from d2 a left join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=0.953..0.953 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.059 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.255..0.255 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.255..0.255 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.073 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.407 ms
(16 rows)

:explain select * from d2 a left join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.766..1.766 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.062 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.833..0.833 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.832..0.832 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.031 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.136 ms
(16 rows)

:explain select * from r2 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.567..251.567 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.394 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.037 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.619 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.617 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.037 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.863 ms
(17 rows)

:explain select * from r2 a left join t2 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=251.694..251.694 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.714 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.018 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.052 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.077 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.075 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.219 ms
(14 rows)

:explain select * from r2 a left join d2 b using (c1);
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=250.904..250.904 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.066 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.065 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.694 ms
(11 rows)

:explain select * from r2 a left join d2 b using (c1, c2);
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=250.795..250.795 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.047 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.046 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 502.358 ms
(11 rows)

:explain select * from r2 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=251.799..251.799 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..2.273 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.054 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.522 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.520 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.038 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 504.435 ms
(17 rows)

:explain select * from r2 a left join r2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=251.276..251.276 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..2.567 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.405 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.038 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.551 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.548 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.136 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 503.402 ms
(17 rows)

--
-- insert
--
insert into t1 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into t2 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
(6 rows)

insert into d1 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d2 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into r1 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into r2 (c1) values (1), (2), (3), (4), (5), (6)
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

begin;
insert into t1 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
(1 row)

insert into d1 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
(1 row)

insert into r1 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
(1 row)

insert into t2 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
(1 row)

insert into d2 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
(1 row)

insert into r2 (c1) values (1) returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
(1 row)

rollback;
begin;
insert into t1 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  7 |   
             0 |  8 |   
             0 |  9 |   
             0 | 10 |   
             0 | 11 |   
             0 | 12 |   
             0 | 13 |   
             0 | 14 |   
             0 | 15 |   
             0 | 16 |   
             0 | 17 |   
             0 | 18 |   
             0 | 19 |   
             0 | 20 |   
(20 rows)

insert into d1 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  7 |   
             0 |  8 |   
             0 |  9 |   
             0 | 10 |   
             0 | 11 |   
             0 | 12 |   
             0 | 13 |   
             0 | 14 |   
             0 | 15 |   
             0 | 16 |   
             0 | 17 |   
             0 | 18 |   
             0 | 19 |   
             0 | 20 |   
(20 rows)

insert into r1 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  7 |   
             0 |  8 |   
             0 |  9 |   
             0 | 10 |   
             0 | 11 |   
             0 | 12 |   
             0 | 13 |   
             0 | 14 |   
             0 | 15 |   
             0 | 16 |   
             0 | 17 |   
             0 | 18 |   
             0 | 19 |   
             0 | 20 |   
(20 rows)

insert into t2 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
             1 |  7 |   
             1 |  9 |   
             1 | 11 |   
             1 | 13 |   
             1 | 15 |   
             1 | 17 |   
             1 | 19 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  8 |   
             0 | 10 |   
             0 | 12 |   
             0 | 14 |   
             0 | 16 |   
             0 | 18 |   
             0 | 20 |   
(20 rows)

insert into d2 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  7 |   
             0 |  8 |   
             0 |  9 |   
             0 | 10 |   
             0 | 11 |   
             0 | 12 |   
             0 | 13 |   
             0 | 14 |   
             0 | 15 |   
             0 | 16 |   
             0 | 17 |   
             0 | 18 |   
             0 | 19 |   
             0 | 20 |   
(20 rows)

insert into r2 (c1) select i from generate_series(1, 20) i
	returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
             1 |  7 |   
             1 |  9 |   
             1 | 11 |   
             1 | 13 |   
             1 | 15 |   
             1 | 17 |   
             1 | 19 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  8 |   
             0 | 10 |   
             0 | 12 |   
             0 | 14 |   
             0 | 16 |   
             0 | 18 |   
             0 | 20 |   
(20 rows)

rollback;
begin;
insert into t1 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into t1 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
(12 rows)

insert into t1 (c1, c2) select c1, c2 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
(6 rows)

insert into t1 (c1, c2) select c2, c1 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  2
             0 |    |  4
             0 |    |  6
             0 |    |  1
             0 |    |  3
             0 |    |  5
(6 rows)

insert into t1 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
(6 rows)

rollback;
begin;
insert into t2 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into t2 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |    |  1
             1 |    |  3
             1 |    |  5
             0 |    |  2
             0 |    |  4
             0 |    |  6
(6 rows)

insert into t2 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

rollback;
begin;
insert into d1 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d1 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
(6 rows)

insert into d1 (c1, c2) select c1, c2 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
(6 rows)

insert into d1 (c1, c2) select c2, c1 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  2
             0 |    |  4
             0 |    |  6
             0 |    |  1
             0 |    |  3
             0 |    |  5
(6 rows)

insert into d1 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |    |  2
             0 |    |  4
             0 |    |  6
             0 |    |  1
             0 |    |  3
             0 |    |  5
(30 rows)

insert into d1 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d1 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d1 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
(6 rows)

rollback;
begin;
insert into d2 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d2 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
(6 rows)

insert into d2 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d2 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(24 rows)

insert into d2 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into d2 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
(6 rows)

rollback;
begin;
insert into r1 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into r1 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
(6 rows)

insert into r1 (c1, c2) select c1, c2 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
(6 rows)

insert into r1 (c1, c2) select c2, c1 from t2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  2
             0 |    |  4
             0 |    |  6
             0 |    |  1
             0 |    |  3
             0 |    |  5
(6 rows)

insert into r1 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into r1 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(6 rows)

insert into r1 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |    |  1
             0 |    |  2
             0 |    |  3
             0 |    |  4
             0 |    |  5
             0 |    |  6
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |    |  2
             0 |    |  4
             0 |    |  6
             0 |    |  1
             0 |    |  3
             0 |    |  5
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
             0 |  1 |   
             0 |  2 |   
             0 |  3 |   
             0 |  4 |   
             0 |  5 |   
             0 |  6 |   
(42 rows)

insert into r1 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             0 |  1 |   
             0 |  3 |   
             0 |  5 |   
(6 rows)

rollback;
begin;
insert into r2 (c1, c2) select c1, c2 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into r2 (c1, c2) select c2, c1 from t1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |    |  2
             0 |    |  4
             0 |    |  6
             1 |    |  1
             1 |    |  3
             1 |    |  5
(6 rows)

insert into r2 (c1, c2) select c1, c2 from d1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from d2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from r1 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             1 |  1 |   
             1 |  3 |   
             1 |  5 |   
             0 |  2 |   
             0 |  4 |   
             0 |  6 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from r2 returning gp_segment_id, c1, c2;
 gp_segment_id | c1 | c2 
---------------+----+----
             0 |  4 |   
             0 |  2 |   
             0 |  6 |   
             0 |    |  4
             0 |  2 |   
             0 |  6 |   
             0 |  4 |   
             0 |  2 |   
             0 |  6 |   
             0 |  1 |   
             0 |  5 |   
             0 |  3 |   
             0 |    |  1
             0 |    |  5
             0 |  3 |   
             0 |  1 |   
             0 |  5 |   
             0 |  3 |   
             1 |  2 |   
             1 |  6 |   
             1 |  4 |   
             1 |    |  2
             1 |    |  6
             1 |  4 |   
             1 |  2 |   
             1 |  6 |   
             1 |  4 |   
             1 |  3 |   
             1 |  1 |   
             1 |  5 |   
             1 |    |  3
             1 |  1 |   
             1 |  5 |   
             1 |  3 |   
             1 |  1 |   
             1 |  5 |   
(36 rows)

rollback;

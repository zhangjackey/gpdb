-- TODO: inherit tables
-- TODO: partition tables
-- TODO: ao tables
-- TODO: tables and temp tables
\set explain 'explain analyze'
set allow_system_table_mods to true;
--
-- prepare kinds of tables
--
create temp table t1 (c1 int, c2 int, c3 int, c4 int) distributed by (c1, c2);
create temp table d1 (c1 int, c2 int, c3 int, c4 int) distributed replicated;
create temp table r1 (c1 int, c2 int, c3 int, c4 int) distributed randomly;
create temp table t2 (c1 int, c2 int, c3 int, c4 int) distributed by (c1, c2);
create temp table d2 (c1 int, c2 int, c3 int, c4 int) distributed replicated;
create temp table r2 (c1 int, c2 int, c3 int, c4 int) distributed randomly;
update gp_distribution_policy set numsegments=1
	where localoid in ('t1'::regclass, 'd1'::regclass, 'r1'::regclass);
update gp_distribution_policy set numsegments=2
	where localoid in ('t2'::regclass, 'd2'::regclass, 'r2'::regclass);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in (
		't1'::regclass, 'd1'::regclass, 'r1'::regclass,
		't2'::regclass, 'd2'::regclass, 'r2'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t1       | {1,2}    | p          |           1
 d1       |          | r          |           1
 r1       |          | p          |           1
 t2       | {1,2}    | p          |           2
 d2       |          | r          |           2
 r2       |          | p          |           2
(6 rows)

--
-- create table
--
create temp table t (like t1);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

drop table t;
create temp table t as table t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed by (c1, c2);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed replicated;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | r          |           3
(1 row)

drop table t;
create temp table t as select * from t1 distributed randomly;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | p          |           3
(1 row)

drop table t;
select * into temp table t from t1;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'c1, c2' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           3
(1 row)

drop table t;
--
-- alter table
--
create table t (like t1);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t set distributed replicated;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | r          |           1
(1 row)

alter table t set distributed randomly;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        |          | p          |           1
(1 row)

alter table t set distributed by (c1, c2);
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t add column c10 int;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

alter table t alter column c10 type text;
select localoid::regclass, attrnums, policytype, numsegments
	from gp_distribution_policy where localoid in ('t'::regclass);
 localoid | attrnums | policytype | numsegments 
----------+----------+------------+-------------
 t        | {1,2}    | p          |           1
(1 row)

drop table t;
-- below join cases cover all the combinations of
--
--     select * from {t,d,r}{1,2} a
--      {left,} join {t,d,r}{1,2} b
--      using (c1{',c2',});
--
-- there might be some duplicated ones, like 't1 join d1' and 'd1 join t1',
-- or 'd1 join r1 using (c1)' and 'd1 join r1 using (c1, c2)', this is because
-- we generate them via scripts and do not clean them up manually.
--
-- please do not remove the duplicated ones as we care about the motion
-- direction of different join orders, e.g. 't2 join t1' and 't1 join t2'
-- should both distribute t2 to t1.
--
-- JOIN
--
-- x1 join y1
:explain select * from t1 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=2.618..2.618 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..4.353 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.007 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.006 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 6.541 ms
(13 rows)

:explain select * from t1 a join t1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.247..0.247 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.148 ms
(11 rows)

:explain select * from t1 a join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.239..0.239 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.205 ms
(11 rows)

:explain select * from t1 a join d1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.179..0.179 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.016 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.027 ms
(11 rows)

:explain select * from t1 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=2.035..2.035 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.162 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..0.644 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..0.644 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.919 ms
(13 rows)

:explain select * from t1 a join r1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.638..1.638 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.303 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.182 ms
(14 rows)

:explain select * from d1 a join t1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.205..0.205 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.103 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.103 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.165 ms
(11 rows)

:explain select * from d1 a join t1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.181..0.181 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.223 ms
(11 rows)

:explain select * from d1 a join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.197..0.197 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.053 ms
(11 rows)

:explain select * from d1 a join d1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.198..0.198 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.028 ms
(11 rows)

:explain select * from d1 a join r1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.233..0.233 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.135 ms
(11 rows)

:explain select * from d1 a join r1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.179..0.179 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.070 ms
(11 rows)

:explain select * from r1 a join t1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=2.547..2.547 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..4.806 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..2.952 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..2.951 rows=0 loops=1)
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 6.008 ms
(13 rows)

:explain select * from r1 a join t1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.854..1.854 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.481 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.028 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.638 ms
(14 rows)

:explain select * from r1 a join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.200..0.200 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.094 ms
(11 rows)

:explain select * from r1 a join d1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.200..0.200 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.032 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.031 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.085 ms
(11 rows)

:explain select * from r1 a join r1 b using (c1);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6321.25..1953565.85 rows=5055210 width=28) (actual time=1.854..1.854 rows=0 loops=2)
   ->  Hash Join  (cost=6321.25..1953565.85 rows=1685070 width=28) (actual time=0.000..3.374 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.479 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.478 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.583 ms
(13 rows)

:explain select * from r1 a join r1 b using (c1, c2);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=6854.50..3799479.05 rows=5056 width=24) (actual time=1.801..1.801 rows=0 loops=2)
   ->  Hash Join  (cost=6854.50..3799479.05 rows=1686 width=24) (actual time=0.000..3.319 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=3655.00..3655.00 rows=71100 width=16) (actual time=0.000..1.441 rows=0 loops=1)
               ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (actual time=0.000..1.440 rows=0 loops=1)
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.447 ms
(13 rows)

-- x1 join y2
:explain select * from t1 a join t2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.482..1.482 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.550 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.053 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.039 ms
(13 rows)

:explain select * from t1 a join t2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=3299.50..1268319.05 rows=5056 width=24) (actual time=2.173..2.173 rows=0 loops=2)
   ->  Hash Join  (cost=3299.50..1268319.05 rows=1686 width=24) (actual time=0.000..4.084 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..2.287 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..2.286 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.013 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.340 ms
(14 rows)

:explain select * from t1 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.314..0.314 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.370 ms
(11 rows)

:explain select * from t1 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.190..0.190 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.071 ms
(11 rows)

:explain select * from t1 a join r2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.824..1.824 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.478 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.028 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.588 ms
(13 rows)

:explain select * from t1 a join r2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=2.078..2.078 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.362 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.042 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.040 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.038 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.159 ms
(14 rows)

:explain select * from d1 a join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.488..1.488 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.058 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.004..0.004 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.003..0.003 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.018 ms
(16 rows)

:explain select * from d1 a join t2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=0.795..0.795 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.185 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.031 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.030 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.289 ms
(14 rows)

:explain select * from d1 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.214..0.214 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.036 ms
(11 rows)

:explain select * from d1 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.209..0.209 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.005 ms
(11 rows)

:explain select * from d1 a join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.544..1.544 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.324..0.324 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.323..0.323 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.589 ms
(16 rows)

:explain select * from d1 a join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=0.919..0.919 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.003..0.003 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.002..0.002 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.643 ms
(16 rows)

:explain select * from r1 a join t2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.801..1.801 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.489 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.025 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.024 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.490 ms
(13 rows)

:explain select * from r1 a join t2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.266..1.266 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.969 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.029 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.184 ms
(14 rows)

:explain select * from r1 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.294..0.294 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.073 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.073 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.169 ms
(11 rows)

:explain select * from r1 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.199..0.199 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.019 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.995 ms
(11 rows)

:explain select * from r1 a join r2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.734..1.734 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.483 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.364 ms
(13 rows)

:explain select * from r1 a join r2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..3798057.05 rows=5056 width=24) (actual time=1.571..1.571 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..3798057.05 rows=1686 width=24) (actual time=0.000..2.437 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.029 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.028 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.899 ms
(13 rows)

-- x2 join y1
:explain select * from t2 a join t1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.211..1.211 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.031 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.025 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.164 ms
(13 rows)

:explain select * from t2 a join t1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=3299.50..1268319.05 rows=5056 width=24) (actual time=1.479..1.479 rows=0 loops=2)
   ->  Hash Join  (cost=3299.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.556 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (never executed)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.635 rows=0 loops=1)
               ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.633 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.013 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4170K bytes avg x 3 workers, 4170K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.722 ms
(14 rows)

:explain select * from t2 a join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.470..1.470 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.613..0.613 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.612..0.612 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.343 ms
(16 rows)

:explain select * from t2 a join d1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.815..1.815 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.410 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.008 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.025 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.357 ms
(14 rows)

:explain select * from t2 a join r1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.463..1.463 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.380 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.008 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.030 rows=0 loops=1)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.029 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.651 ms
(13 rows)

:explain select * from t2 a join r1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.357..1.357 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.370 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.012 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.546 ms
(14 rows)

:explain select * from d2 a join t1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.283..0.283 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.190 ms
(11 rows)

:explain select * from d2 a join t1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.196..0.196 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.016 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.001 ms
(11 rows)

:explain select * from d2 a join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.192..0.192 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.951 ms
(11 rows)

:explain select * from d2 a join d1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.202..0.202 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.014 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.969 ms
(11 rows)

:explain select * from d2 a join r1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.200..0.200 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.075 ms
(11 rows)

:explain select * from d2 a join r1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.198..0.198 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.016 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.028 ms
(11 rows)

:explain select * from r2 a join t1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.407..1.407 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.410 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.647 ms
(13 rows)

:explain select * from r2 a join t1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.370..1.370 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.408 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.610 ms
(14 rows)

:explain select * from r2 a join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.540..1.540 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.636..0.636 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.635..0.635 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.470 ms
(16 rows)

:explain select * from r2 a join d1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.428..1.428 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.023 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.648..0.648 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.647..0.647 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.332 ms
(16 rows)

:explain select * from r2 a join r1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.328..1.328 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.378 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.497 ms
(13 rows)

:explain select * from r2 a join r1 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..3798057.05 rows=5056 width=24) (actual time=1.363..1.363 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..3798057.05 rows=1686 width=24) (actual time=0.000..2.437 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.035 rows=0 loops=1)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.561 ms
(13 rows)

-- x2 join y2
:explain select * from t2 a join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.625..2.625 rows=0 loops=2)
   ->  Hash Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..4.832 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.012 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..3.169 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..3.167 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.024 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 12.201 ms
(17 rows)

:explain select * from t2 a join t2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.189..0.189 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.957 ms
(11 rows)

:explain select * from t2 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.287..0.287 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.908 ms
(11 rows)

:explain select * from t2 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.312..0.312 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.960 ms
(11 rows)

:explain select * from t2 a join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.421..1.421 rows=0 loops=2)
   ->  Hash Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.165 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.204 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.203 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.328 ms
(17 rows)

:explain select * from t2 a join r2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.399..1.399 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.266 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.556 ms
(14 rows)

:explain select * from d2 a join t2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.185..0.185 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.972 ms
(11 rows)

:explain select * from d2 a join t2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.197..0.197 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.972 ms
(11 rows)

:explain select * from d2 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.196..0.196 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.893 ms
(11 rows)

:explain select * from d2 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.189..0.189 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.013 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.013 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.869 ms
(11 rows)

:explain select * from d2 a join r2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.201..0.201 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.103 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.103 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.087 ms
(11 rows)

:explain select * from d2 a join r2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.216..0.216 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.019 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.019 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.045 ms
(11 rows)

:explain select * from r2 a join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.552..1.552 rows=0 loops=2)
   ->  Hash Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.164 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.273 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.271 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.302 ms
(17 rows)

:explain select * from r2 a join t2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268319.05 rows=5056 width=24) (actual time=1.061..1.061 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1268319.05 rows=1686 width=24) (actual time=0.000..2.453 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.039 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.037 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.654 ms
(14 rows)

:explain select * from r2 a join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.245..0.245 rows=0 loops=2)
   ->  Hash Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.075 ms
(11 rows)

:explain select * from r2 a join d2 b using (c1, c2);
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1266897.05 rows=5056 width=24) (actual time=0.180..0.180 rows=0 loops=2)
   ->  Hash Join  (cost=1877.50..1266897.05 rows=1686 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.943 ms
(11 rows)

:explain select * from r2 a join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.821..1.821 rows=0 loops=2)
   ->  Hash Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.395 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.527 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.526 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.498 ms
(17 rows)

:explain select * from r2 a join r2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3299.50..1269741.05 rows=5056 width=24) (actual time=2.001..2.001 rows=0 loops=2)
   ->  Hash Join  (cost=3299.50..1269741.05 rows=1686 width=24) (actual time=0.000..3.243 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.378 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.377 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.819 ms
(17 rows)

-- x1 left join y1
:explain select * from t1 a left join t1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.423..1.423 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.392 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.025 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.543 ms
(13 rows)

:explain select * from t1 a left join t1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.172..0.172 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.907 ms
(11 rows)

:explain select * from t1 a left join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.200..0.200 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.952 ms
(11 rows)

:explain select * from t1 a left join d1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.183..0.183 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.077 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.076 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.982 ms
(11 rows)

:explain select * from t1 a left join r1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.372..1.372 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.421 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.021 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.448 ms
(13 rows)

:explain select * from t1 a left join r1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.411..1.411 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.367 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.021 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.552 ms
(14 rows)

:explain select * from d1 a left join t1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.584..1.584 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.676..0.676 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.675..0.675 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.561 ms
(16 rows)

:explain select * from d1 a left join t1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=0.991..0.991 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.200..0.200 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.200..0.200 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.008 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.434 ms
(16 rows)

:explain select * from d1 a left join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.205..0.205 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.985 ms
(11 rows)

:explain select * from d1 a left join d1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.200..0.200 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.906 ms
(11 rows)

:explain select * from d1 a left join r1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.578..1.578 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.702..0.702 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.700..0.700 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.536 ms
(16 rows)

:explain select * from d1 a left join r1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.507..1.507 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.663..0.663 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.663..0.663 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.429 ms
(16 rows)

:explain select * from r1 a left join t1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.381..1.381 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.252 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.023 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.021 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.601 ms
(13 rows)

:explain select * from r1 a left join t1 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.681..1.681 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.901 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.138 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.057 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.055 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.023 ms
(14 rows)

:explain select * from r1 a left join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.230..0.230 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.015 ms
(11 rows)

:explain select * from r1 a left join d1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.194..0.194 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.101 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.101 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.979 ms
(11 rows)

:explain select * from r1 a left join r1 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.393..1.393 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.391 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.021 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.549 ms
(13 rows)

:explain select * from r1 a left join r1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..3798717.50 rows=71100 width=24) (actual time=1.401..1.401 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..3798717.50 rows=23700 width=24) (actual time=0.000..2.158 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Broadcast Motion 1:1  (slice1; segments: 1)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.025 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.023 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.448 ms
(13 rows)

-- x1 left join y2
:explain select * from t1 a left join t2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.409..1.409 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.453 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.737 ms
(13 rows)

:explain select * from t1 a left join t2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=3299.50..1268979.50 rows=71100 width=24) (actual time=1.793..1.793 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1268979.50 rows=23700 width=24) (actual time=0.000..3.120 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.196 rows=0 loops=1)
               ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.195 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.268 ms
(14 rows)

:explain select * from t1 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.201..0.201 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.105 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.104 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.996 ms
(11 rows)

:explain select * from t1 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.192..0.192 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.024 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.024 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.024 ms
(11 rows)

:explain select * from t1 a left join r2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.427..1.427 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.190 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.057 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.056 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.685 ms
(13 rows)

:explain select * from t1 a left join r2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.449..1.449 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.436 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.024 rows=0 loops=1)
               ->  Seq Scan on t1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.813 ms
(14 rows)

:explain select * from d1 a left join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.573..1.573 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.674..0.674 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.674..0.674 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.531 ms
(16 rows)

:explain select * from d1 a left join t2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.542..1.542 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.021 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.700..0.700 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.699..0.699 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.583 ms
(16 rows)

:explain select * from d1 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.230..0.230 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.013 ms
(11 rows)

:explain select * from d1 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.226..0.226 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.973 ms
(11 rows)

:explain select * from d1 a left join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.550..1.550 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.690..0.690 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.689..0.689 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.479 ms
(16 rows)

:explain select * from d1 a left join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.553..1.553 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.710..0.710 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.709..0.709 rows=0 loops=2)
               ->  Seq Scan on d1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.539 ms
(16 rows)

:explain select * from r1 a left join t2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.381..1.381 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.357 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.050 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.531 ms
(13 rows)

:explain select * from r1 a left join t2 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.752..1.752 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.998 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.113 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.228 ms
(14 rows)

:explain select * from r1 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.175..0.175 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.921 ms
(11 rows)

:explain select * from r1 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.202..0.202 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.033 ms
(11 rows)

:explain select * from r1 a left join r2 b using (c1);
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1699.75..1952143.85 rows=5055210 width=28) (actual time=1.422..1.422 rows=0 loops=2)
   ->  Hash Right Join  (cost=1699.75..1952143.85 rows=1685070 width=28) (actual time=0.000..2.366 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.037 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.028 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.668 ms
(13 rows)

:explain select * from r1 a left join r2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..3798717.50 rows=71100 width=24) (actual time=1.442..1.442 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..3798717.50 rows=23700 width=24) (actual time=0.000..2.549 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Broadcast Motion 2:1  (slice1; segments: 2)  (cost=0.00..3655.00 rows=71100 width=16) (never executed)
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
               ->  Seq Scan on r1 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.031 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.610 ms
(13 rows)

-- x2 left join y1
:explain select * from t2 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.356..2.356 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.760 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.003 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..2.152 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..2.151 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.593 ms
(17 rows)

:explain select * from t2 a left join t1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=3299.50..1268979.50 rows=71100 width=24) (actual time=1.287..1.287 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.759 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.943 rows=0 loops=1)
               ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.942 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.922 ms
(14 rows)

:explain select * from t2 a left join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=0.920..0.920 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=0.002..0.002 rows=0 loops=2)
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.577 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.003..0.003 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.002..0.002 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.487 ms
(16 rows)

:explain select * from t2 a left join d1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=0.002..0.002 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..1.866 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.036 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.034 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.554 ms
(14 rows)

:explain select * from t2 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.841..1.841 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..4.616 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.003 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..2.932 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..2.930 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.019 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.554 ms
(17 rows)

:explain select * from t2 a left join r1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.105..1.105 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..1.888 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 1:2  (slice1; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.027 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.026 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.969 ms
(14 rows)

:explain select * from d2 a left join t1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.737..1.737 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.887..0.887 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.886..0.886 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.870 ms
(16 rows)

:explain select * from d2 a left join t1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.373..1.373 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.606..0.606 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.605..0.605 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.182 ms
(16 rows)

:explain select * from d2 a left join d1 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.214..0.214 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.074 ms
(11 rows)

:explain select * from d2 a left join d1 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.184..0.184 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.015 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.981 ms
(11 rows)

:explain select * from d2 a left join r1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=0.832..0.832 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.015 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.002..0.002 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.002..0.002 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.081 ms
(16 rows)

:explain select * from d2 a left join r1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.465..1.465 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.595..0.595 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.594..0.594 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.325 ms
(16 rows)

:explain select * from r2 a left join t1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.688..2.688 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.979 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.906 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.287 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.285 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 6.261 ms
(17 rows)

:explain select * from r2 a left join t1 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.612..1.612 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.797 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.923 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
               ->  Seq Scan on t1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.031 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.018 ms
(14 rows)

:explain select * from r2 a left join d1 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.099..1.099 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=0.198..0.198 rows=0 loops=2)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.087..0.087 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.086..0.086 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.591 ms
(16 rows)

:explain select * from r2 a left join d1 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Left Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.158..1.158 rows=0 loops=2)
   Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (actual time=0.258..0.258 rows=0 loops=2)
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.138..0.138 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.137..0.137 rows=0 loops=2)
               ->  Seq Scan on d1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.013 rows=0 loops=1)
   (slice0)    Executor memory: 4238K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 2.802 ms
(16 rows)

:explain select * from r2 a left join r1 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.945..1.945 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.466 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.003 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.634 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.634 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.749 ms
(17 rows)

:explain select * from r2 a left join r1 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice3; segments: 1)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=2.230..2.230 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..3.825 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.693 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..0.810 rows=0 loops=1)
               ->  Redistribute Motion 1:1  (slice2; segments: 1)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.808 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r1 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.073 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.359 ms
(17 rows)

-- x2 left join y2
:explain select * from t2 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=1.972..1.972 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..3.288 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.003 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.506 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.505 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.784 ms
(17 rows)

:explain select * from t2 a left join t2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.167..0.167 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.018 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes avg x 3 workers, 78K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.954 ms
(11 rows)

:explain select * from t2 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.216..0.216 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.063 ms
(11 rows)

:explain select * from t2 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.196..0.196 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.016 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.968 ms
(11 rows)

:explain select * from t2 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.635..2.635 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..4.959 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.997 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.019 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.252 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.251 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.013 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 6.142 ms
(17 rows)

:explain select * from t2 a left join r2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.633..1.633 rows=0 loops=2)
   ->  Hash Right Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.559 rows=0 loops=1)
         Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (never executed)
               Hash Key: b.c1, b.c2
               ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.022 rows=0 loops=1)
               ->  Seq Scan on t2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.020 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.862 ms
(14 rows)

:explain select * from d2 a left join t2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.438..1.438 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.617..0.617 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.617..0.617 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.285 ms
(16 rows)

:explain select * from d2 a left join t2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.335..1.335 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.561..0.561 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.560..0.560 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.063 ms
(16 rows)

:explain select * from d2 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.206..0.206 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.016 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.946 ms
(11 rows)

:explain select * from d2 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.192..0.192 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.014 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 78K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.883 ms
(11 rows)

:explain select * from d2 a left join r2 b using (c1);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1699.75..686563.85 rows=5055210 width=28) (actual time=1.487..1.487 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.662..0.662 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.662..0.662 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.353 ms
(16 rows)

:explain select * from d2 a left join r2 b using (c1, c2);
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Hash Right Join  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.478..1.478 rows=0 loops=2)
   Hash Cond: b.c1 = a.c1 AND b.c2 = a.c2
   Extra Text: Hash chain length 0.0 avg, 0 max, using 0 of 524288 buckets.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..2233.00 rows=71100 width=16) (never executed)
         ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
   ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.662..0.662 rows=0 loops=2)
         Buckets: 524288  Batches: 1  Memory Usage: 0kB
         ->  Gather Motion 1:1  (slice2; segments: 1)  (cost=811.00..811.00 rows=71100 width=16) (actual time=0.662..0.662 rows=0 loops=2)
               ->  Seq Scan on d2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
   (slice0)    Executor memory: 4234K bytes.
   (slice1)    Executor memory: 50K bytes avg x 3 workers, 50K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 3.353 ms
(16 rows)

:explain select * from r2 a left join t2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.192..2.192 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..4.022 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.003 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..2.100 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..2.099 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.011 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 5.253 ms
(17 rows)

:explain select * from r2 a left join t2 b using (c1, c2);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=1877.50..1268979.50 rows=71100 width=24) (actual time=1.683..1.683 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1268979.50 rows=23700 width=24) (actual time=0.000..2.974 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.021 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.009 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (actual time=0.000..0.033 rows=0 loops=1)
               ->  Seq Scan on t2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.032 rows=0 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 4182K bytes avg x 3 workers, 4182K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.098 ms
(14 rows)

:explain select * from r2 a left join d2 b using (c1);
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1699.75..685141.85 rows=5055210 width=28) (actual time=0.237..0.237 rows=0 loops=2)
   ->  Hash Left Join  (cost=1699.75..685141.85 rows=1685070 width=28) (actual time=0.000..0.103 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.018 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 1.022 ms
(11 rows)

:explain select * from r2 a left join d2 b using (c1, c2);
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=1877.50..1267557.50 rows=71100 width=24) (actual time=0.171..0.171 rows=0 loops=2)
   ->  Hash Left Join  (cost=1877.50..1267557.50 rows=23700 width=24) (actual time=0.000..0.017 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.017 rows=0 loops=1)
         ->  Hash  (cost=811.00..811.00 rows=23700 width=16) (never executed)
               ->  Seq Scan on d2 b  (cost=0.00..811.00 rows=23700 width=16) (never executed)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 98K bytes avg x 3 workers, 98K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 0.923 ms
(11 rows)

:explain select * from r2 a left join r2 b using (c1);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3121.75..687985.85 rows=5055210 width=28) (actual time=2.649..2.649 rows=0 loops=2)
   ->  Hash Left Join  (cost=3121.75..687985.85 rows=1685070 width=28) (actual time=0.000..4.693 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.019 rows=0 loops=1)
               Hash Key: a.c1
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.019 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..3.142 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..3.141 rows=0 loops=1)
                     Hash Key: b.c1
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.012 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 6.083 ms
(17 rows)

:explain select * from r2 a left join r2 b using (c1, c2);
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=3299.50..1270401.50 rows=71100 width=24) (actual time=2.026..2.026 rows=0 loops=2)
   ->  Hash Left Join  (cost=3299.50..1270401.50 rows=23700 width=24) (actual time=0.000..3.432 rows=0 loops=1)
         Hash Cond: a.c1 = b.c1 AND a.c2 = b.c2
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..0.607 rows=0 loops=1)
               Hash Key: a.c1, a.c2
               ->  Seq Scan on r2 a  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.014 rows=0 loops=1)
         ->  Hash  (cost=2233.00..2233.00 rows=23700 width=16) (actual time=0.000..1.445 rows=0 loops=1)
               ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=0.00..2233.00 rows=23700 width=16) (actual time=0.000..1.444 rows=0 loops=1)
                     Hash Key: b.c1, b.c2
                     ->  Seq Scan on r2 b  (cost=0.00..811.00 rows=23700 width=16) (actual time=0.000..0.010 rows=0 loops=1)
   (slice0)    Executor memory: 390K bytes.
   (slice1)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice2)    Executor memory: 66K bytes avg x 3 workers, 66K bytes max (seg0).
   (slice3)    Executor memory: 4174K bytes avg x 3 workers, 4174K bytes max (seg0).
 Memory used:  128000kB
 Optimizer: legacy query optimizer
 Total runtime: 4.955 ms
(17 rows)

--
-- insert
--
insert into t1 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into t2 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into d1 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d2 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r1 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r2 (c1) values (1), (2), (3), (4), (5), (6)
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  3 |   
  4 |   
  5 |   
  6 |   
  2 |   
(6 rows)

begin;
insert into t1 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

insert into d1 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

insert into r1 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

insert into t2 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

insert into d2 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

insert into r2 (c1) values (1) returning c1, c2;
 c1 | c2 
----+----
  1 |   
(1 row)

rollback;
begin;
insert into t1 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  7 |   
  8 |   
  9 |   
 10 |   
 11 |   
 12 |   
 13 |   
 14 |   
 15 |   
 16 |   
 17 |   
 18 |   
 19 |   
 20 |   
(20 rows)

insert into d1 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  7 |   
  8 |   
  9 |   
 10 |   
 11 |   
 12 |   
 13 |   
 14 |   
 15 |   
 16 |   
 17 |   
 18 |   
 19 |   
 20 |   
(20 rows)

insert into r1 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  7 |   
  8 |   
  9 |   
 10 |   
 11 |   
 12 |   
 13 |   
 14 |   
 15 |   
 16 |   
 17 |   
 18 |   
 19 |   
 20 |   
(20 rows)

insert into t2 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  4 |   
  5 |   
 11 |   
 12 |   
 13 |   
 14 |   
 19 |   
  1 |   
  2 |   
  3 |   
  6 |   
  7 |   
  8 |   
  9 |   
 10 |   
 15 |   
 16 |   
 17 |   
 18 |   
 20 |   
(20 rows)

insert into d2 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  7 |   
  8 |   
  9 |   
 10 |   
 11 |   
 12 |   
 13 |   
 14 |   
 15 |   
 16 |   
 17 |   
 18 |   
 19 |   
 20 |   
(20 rows)

insert into r2 (c1) select i from generate_series(1, 20) i
	returning c1, c2;
 c1 | c2 
----+----
  4 |   
  6 |   
 14 |   
 15 |   
 16 |   
 18 |   
 19 |   
  1 |   
  2 |   
  3 |   
  5 |   
  7 |   
  8 |   
  9 |   
 10 |   
 11 |   
 12 |   
 13 |   
 17 |   
 20 |   
(20 rows)

rollback;
begin;
insert into t1 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into t1 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
(12 rows)

insert into t1 (c1, c2) select c1, c2 from t2 returning c1, c2;
 c1 | c2 
----+----
  4 |   
  5 |   
  1 |   
  2 |   
  3 |   
  6 |   
(6 rows)

insert into t1 (c1, c2) select c2, c1 from t2 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  6
    |  4
    |  5
(6 rows)

insert into t1 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into t1 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  2 |   
  1 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

rollback;
begin;
insert into t2 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into t2 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  2
    |  4
    |  6
    |  1
    |  3
    |  5
(6 rows)

insert into t2 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into t2 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  4 |   
  5 |   
  2 |   
  1 |   
  3 |   
  6 |   
(6 rows)

rollback;
begin;
insert into d1 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d1 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
(6 rows)

insert into d1 (c1, c2) select c1, c2 from t2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into d1 (c1, c2) select c2, c1 from t2 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  6
    |  4
    |  5
(6 rows)

insert into d1 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
    |  1
    |  2
    |  3
    |  6
    |  4
    |  5
(30 rows)

insert into d1 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d1 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d1 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  2 |   
  1 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

rollback;
begin;
insert into d2 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d2 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
(6 rows)

insert into d2 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d2 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(24 rows)

insert into d2 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into d2 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  2 |   
  1 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

rollback;
begin;
insert into r1 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r1 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
(6 rows)

insert into r1 (c1, c2) select c1, c2 from t2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
(6 rows)

insert into r1 (c1, c2) select c2, c1 from t2 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  3
    |  6
    |  4
    |  5
(6 rows)

insert into r1 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r1 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r1 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
    |  1
    |  2
    |  3
    |  4
    |  5
    |  6
  1 |   
  2 |   
  3 |   
  6 |   
  4 |   
  5 |   
    |  1
    |  2
    |  3
    |  6
    |  4
    |  5
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(42 rows)

insert into r1 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  2 |   
  1 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

rollback;
begin;
insert into r2 (c1, c2) select c1, c2 from t1 returning c1, c2;
 c1 | c2 
----+----
  1 |   
  2 |   
  3 |   
  4 |   
  5 |   
  6 |   
(6 rows)

insert into r2 (c1, c2) select c2, c1 from t1 returning c1, c2;
 c1 | c2 
----+----
    |  1
    |  2
    |  4
    |  5
    |  6
    |  3
(6 rows)

insert into r2 (c1, c2) select c1, c2 from d1 returning c1, c2;
 c1 | c2 
----+----
  4 |   
  5 |   
  1 |   
  2 |   
  3 |   
  6 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from d2 returning c1, c2;
 c1 | c2 
----+----
  4 |   
  5 |   
  1 |   
  2 |   
  3 |   
  6 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from r1 returning c1, c2;
 c1 | c2 
----+----
  3 |   
  4 |   
  6 |   
  1 |   
  2 |   
  5 |   
(6 rows)

insert into r2 (c1, c2) select c1, c2 from r2 returning c1, c2;
 c1 | c2 
----+----
  2 |   
  1 |   
  6 |   
    |  5
  5 |   
  4 |   
  5 |   
  4 |   
  6 |   
  1 |   
  2 |   
  3 |   
  6 |   
  1 |   
  2 |   
  3 |   
  6 |   
  3 |   
  4 |   
  2 |   
  3 |   
  4 |   
  5 |   
    |  1
    |  2
    |  4
    |  6
  4 |   
  5 |   
  1 |   
  2 |   
  1 |   
  3 |   
  5 |   
    |  3
  6 |   
(36 rows)

rollback;
